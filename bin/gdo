#!/bin/bash

# Gian's DevOps

tmp="$HOME/tmp";

fetch_github_repos () {
  echo "Enter github username: ";
  read gh_username;

  # Save the answer from the api
  curl -u "$gh_username" https://api.github.com/user/repos > $tmp/gh_repos;

{
  "message": "Bad credentials",
  "documentation_url": "https://developer.github.com/v3"
}

  # Save the urls
  cat $tmp/gh_repos | grep html_url | grep "$gh_username"/ | cut -d "\"" -f 4 > $tmp/gh_repos_urls;
  # Save the names
  cat $tmp/gh_repos_urls | cut -d "/" -f 5 > $tmp/gh_repos_names;
}

# Create necessary directories and annotate their paths
generate_paths () {
  mkdir -p "$GDO_PROJSPATH";
  mkdir -p "$GDO_NOTESPATH";
  while read -u 10 p; do
    projpath="$GDO_PROJSPATH/$p";
    notespath="$GDO_NOTESPATH/$p";
    echo "$projpath" >> "$tmp/gh_repos_paths";
    echo "$notespath" >> "$tmp/gh_repos_notes";
  done 10<$tmp/gh_repos_names
}

# Generate the myrepos file with a horizontal concatenation
generate_myrepos () {
  paste -d "|" $tmp/gh_repos_names $tmp/gh_repos_paths $tmp/gh_repos_urls $tmp/gh_repos_notes > $HOME/.myrepos;
}


gitdir () {
  if [ -d "$1" ]; then
    serverDir="$1";
    git --git-dir=$serverDir/.git --work-tree=$serverDir "${@:2}";
  else
    echo "ERROR: gitdir() - Must provide an existant directory.";
  fi
  echo -e;
}

# gitme - execute command or download on all repositories listed in myrepos
# usage: gitme [ <command> ]
gitrepos () {
  # Read ~/.myreppos
  while read -u 10 p; do
    # If line is not a comment
    if [[ "$p" != \#* ]] && [ "$p" ] ; then
      echo "About project $(echo "$p" | cut -d "|" -f 1)";
      path=$(echo "$p" | cut -d "|" -f 2 | envsubst);
      remote=$(echo "$p" | cut -d "|" -f 3);
      # If no arguments were passed, install repositories
      if [ -z "$1" ]; then
        if [ ! -d "$path" ] ; then
          # TODO go to fix its not entering this loop... this whole script is weird
          git clone "$remote" "$path";
        fi
      else
        gitdir "$path" "$@";
      fi
    fi
  done 10<$HOME/.myrepos
}

# Checks if .myrepos exists
if [ -f $HOME/.myrepos ]; then
  gitrepos "$@";
  # If not ask to create it
else
  echo "You don't have a .myrepos file. Do you wish to create it?";
  fetch_github_repos;
  generate_paths;
  generate_myrepos;
  gitrepos "$@";
fi
